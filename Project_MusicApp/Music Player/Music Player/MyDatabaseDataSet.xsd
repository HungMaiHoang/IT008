<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MyDatabaseDataSet" targetNamespace="http://tempuri.org/MyDatabaseDataSet.xsd" xmlns:mstns="http://tempuri.org/MyDatabaseDataSet.xsd" xmlns="http://tempuri.org/MyDatabaseDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MyDatabaseConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MyDatabaseConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.Music_Player.Properties.Settings.GlobalReference.Default.MyDatabaseConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlaylistsTableAdapter" GeneratorDataComponentClassName="PlaylistsTableAdapter" Name="Playlists" UserDataComponentName="PlaylistsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDatabaseConnectionString (Settings)" DbObjectName="dbo.Playlists" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Playlists] WHERE (([PlaylistID] = @Original_PlaylistID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Playlists] ([Name]) VALUES (@Name);
SELECT PlaylistID, Name FROM Playlists WHERE (PlaylistID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PlaylistID, Name FROM dbo.Playlists</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Playlists] SET [Name] = @Name WHERE (([PlaylistID] = @Original_PlaylistID) AND ([Name] = @Original_Name));
SELECT PlaylistID, Name FROM Playlists WHERE (PlaylistID = @PlaylistID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="PlaylistID" ColumnName="PlaylistID" DataSourceName="[C:\USERS\LENOVO\ONEDRIVE\DESKTOP\IT008\PROJECT_MUSICAPP\MUSIC PLAYER\MUSIC PLAYER\MYDATABASE.MDF].dbo.Playlists" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PlaylistID" DataSetColumn="PlaylistID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PlaylistSongsTableAdapter" GeneratorDataComponentClassName="PlaylistSongsTableAdapter" Name="PlaylistSongs" UserDataComponentName="PlaylistSongsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDatabaseConnectionString (Settings)" DbObjectName="dbo.PlaylistSongs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PlaylistSongs] WHERE (([PlaylistID] = @Original_PlaylistID) AND ([SongID] = @Original_SongID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PlaylistSongs] ([PlaylistID], [SongID]) VALUES (@PlaylistID, @SongID);
SELECT PlaylistID, SongID FROM PlaylistSongs WHERE (PlaylistID = @PlaylistID) AND (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT PlaylistID, SongID FROM dbo.PlaylistSongs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PlaylistSongs] SET [PlaylistID] = @PlaylistID, [SongID] = @SongID WHERE (([PlaylistID] = @Original_PlaylistID) AND ([SongID] = @Original_SongID));
SELECT PlaylistID, SongID FROM PlaylistSongs WHERE (PlaylistID = @PlaylistID) AND (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_PlaylistID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="PlaylistID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="PlaylistID" DataSetColumn="PlaylistID" />
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SongsTableAdapter" GeneratorDataComponentClassName="SongsTableAdapter" Name="Songs" UserDataComponentName="SongsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MyDatabaseConnectionString (Settings)" DbObjectName="dbo.Songs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Songs] WHERE (([SongID] = @Original_SongID) AND ([Tilte] = @Original_Tilte))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Tilte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tilte" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Songs] ([Tilte], [Path]) VALUES (@Tilte, @Path);
SELECT SongID, Tilte, Path FROM Songs WHERE (SongID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Tilte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tilte" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Path" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Path" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SongID, Tilte, Path FROM dbo.Songs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Songs] SET [Tilte] = @Tilte, [Path] = @Path WHERE (([SongID] = @Original_SongID) AND ([Tilte] = @Original_Tilte));
SELECT SongID, Tilte, Path FROM Songs WHERE (SongID = @SongID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Tilte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tilte" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Path" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Path" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SongID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_Tilte" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Tilte" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="SongID" ColumnName="SongID" DataSourceName="[C:\USERS\LENOVO\ONEDRIVE\DESKTOP\IT008\PROJECT_MUSICAPP\MUSIC PLAYER\MUSIC PLAYER\MYDATABASE.MDF].dbo.Songs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@SongID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="SongID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SongID" DataSetColumn="SongID" />
              <Mapping SourceColumn="Tilte" DataSetColumn="Tilte" />
              <Mapping SourceColumn="Path" DataSetColumn="Path" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MyDatabaseDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="MyDatabaseDataSet" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MyDatabaseDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Playlists" msprop:Generator_RowClassName="PlaylistsRow" msprop:Generator_RowEvHandlerName="PlaylistsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlaylistsRowDeleted" msprop:Generator_RowDeletingName="PlaylistsRowDeleting" msprop:Generator_RowEvArgName="PlaylistsRowChangeEvent" msprop:Generator_TablePropName="Playlists" msprop:Generator_RowChangedName="PlaylistsRowChanged" msprop:Generator_UserTableName="Playlists" msprop:Generator_RowChangingName="PlaylistsRowChanging" msprop:Generator_TableClassName="PlaylistsDataTable" msprop:Generator_TableVarName="tablePlaylists">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PlaylistID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="1" msprop:Generator_UserColumnName="PlaylistID" msprop:Generator_ColumnPropNameInTable="PlaylistIDColumn" msprop:Generator_ColumnPropNameInRow="PlaylistID" msprop:Generator_ColumnVarNameInTable="columnPlaylistID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_UserColumnName="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnVarNameInTable="columnName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="225" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="PlaylistSongs" msprop:Generator_RowClassName="PlaylistSongsRow" msprop:Generator_RowEvHandlerName="PlaylistSongsRowChangeEventHandler" msprop:Generator_RowDeletedName="PlaylistSongsRowDeleted" msprop:Generator_RowDeletingName="PlaylistSongsRowDeleting" msprop:Generator_RowEvArgName="PlaylistSongsRowChangeEvent" msprop:Generator_TablePropName="PlaylistSongs" msprop:Generator_RowChangedName="PlaylistSongsRowChanged" msprop:Generator_UserTableName="PlaylistSongs" msprop:Generator_RowChangingName="PlaylistSongsRowChanging" msprop:Generator_TableClassName="PlaylistSongsDataTable" msprop:Generator_TableVarName="tablePlaylistSongs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="PlaylistID" msprop:Generator_UserColumnName="PlaylistID" msprop:Generator_ColumnPropNameInTable="PlaylistIDColumn" msprop:Generator_ColumnPropNameInRow="PlaylistID" msprop:Generator_ColumnVarNameInTable="columnPlaylistID" type="xs:int" />
              <xs:element name="SongID" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Songs" msprop:Generator_RowClassName="SongsRow" msprop:Generator_RowEvHandlerName="SongsRowChangeEventHandler" msprop:Generator_RowDeletedName="SongsRowDeleted" msprop:Generator_RowDeletingName="SongsRowDeleting" msprop:Generator_RowEvArgName="SongsRowChangeEvent" msprop:Generator_TablePropName="Songs" msprop:Generator_RowChangedName="SongsRowChanged" msprop:Generator_UserTableName="Songs" msprop:Generator_RowChangingName="SongsRowChanging" msprop:Generator_TableClassName="SongsDataTable" msprop:Generator_TableVarName="tableSongs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SongID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="1" msprop:Generator_UserColumnName="SongID" msprop:Generator_ColumnPropNameInTable="SongIDColumn" msprop:Generator_ColumnPropNameInRow="SongID" msprop:Generator_ColumnVarNameInTable="columnSongID" type="xs:int" />
              <xs:element name="Tilte" msprop:Generator_UserColumnName="Tilte" msprop:Generator_ColumnPropNameInTable="TilteColumn" msprop:Generator_ColumnPropNameInRow="Tilte" msprop:Generator_ColumnVarNameInTable="columnTilte">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Path" msprop:Generator_UserColumnName="Path" msprop:Generator_ColumnPropNameInTable="PathColumn" msprop:Generator_ColumnPropNameInRow="Path" msprop:Generator_ColumnVarNameInTable="columnPath" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Playlists" />
      <xs:field xpath="mstns:PlaylistID" />
    </xs:unique>
    <xs:unique name="PlaylistSongs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PlaylistSongs" />
      <xs:field xpath="mstns:PlaylistID" />
      <xs:field xpath="mstns:SongID" />
    </xs:unique>
    <xs:unique name="Songs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Songs" />
      <xs:field xpath="mstns:SongID" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__PlaylistS__Playl__4BAC3F29" msdata:parent="Playlists" msdata:child="PlaylistSongs" msdata:parentkey="PlaylistID" msdata:childkey="PlaylistID" msprop:Generator_UserParentTable="Playlists" msprop:Generator_UserChildTable="PlaylistSongs" msprop:Generator_RelationVarName="relationFK__PlaylistS__Playl__4BAC3F29" msprop:Generator_ChildPropName="GetPlaylistSongsRows" msprop:Generator_UserRelationName="FK__PlaylistS__Playl__4BAC3F29" msprop:Generator_ParentPropName="PlaylistsRow" />
      <msdata:Relationship name="FK__PlaylistS__SongI__4CA06362" msdata:parent="Songs" msdata:child="PlaylistSongs" msdata:parentkey="SongID" msdata:childkey="SongID" msprop:Generator_UserParentTable="Songs" msprop:Generator_UserChildTable="PlaylistSongs" msprop:Generator_RelationVarName="relationFK__PlaylistS__SongI__4CA06362" msprop:Generator_ChildPropName="GetPlaylistSongsRows" msprop:Generator_ParentPropName="SongsRow" msprop:Generator_UserRelationName="FK__PlaylistS__SongI__4CA06362" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>